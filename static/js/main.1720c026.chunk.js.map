{"version":3,"sources":["GridLayout.jsx","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","inputData","setInputData","items","setItems","toggle","setToggle","editItem","setEditItem","addItems","map","item","id","name","allInputData","Date","getTime","toString","alert","className","type","placeholder","value","onChange","event","target","title","onClick","newEditItem","find","Edit","index","updatedItems","filter","Delete","data-sm-link-text","App","GridLayout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gLAsGeA,EApGF,WAET,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BJ,oBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAgCN,mBAAS,MAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KAEMC,EAAW,WAEb,GAAKR,EAGE,GAAIA,IAAcI,EAErBD,EACID,EAAMO,KAAI,SAACC,GAEP,OAAIA,EAAKC,KAAOL,EAEL,2BAAKI,GAAZ,IAAkBE,KAAMZ,IAErBU,MAGfL,GAAU,GACVJ,EAAa,IACbM,EAAY,UAGhB,CACI,IAAMM,EAAe,CAAEF,IAAI,IAAIG,MAAOC,UAAUC,WAAYJ,KAAMZ,GAClEG,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBZ,EAAa,SArBbgB,MAAM,kBAoDd,OACI,mCACI,qBAAKC,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,WAAf,UACI,uBAAOC,KAAK,OAAOC,YAAY,YAAYC,MAAOrB,EAAWsB,SAAU,SAACC,GAAYtB,EAAasB,EAAMC,OAAOH,UAE1GjB,EAAS,mBAAGc,UAAU,qBAAqBO,MAAM,WAAWC,QAASlB,IACjE,mBAAGU,UAAU,sBAAsBO,MAAM,cAAcC,QAASlB,OAG5E,qBAAKU,UAAU,YAAf,SAEQhB,EAAMO,KAAI,SAACC,GAEP,OACI,sBAAKQ,UAAU,WAAf,UACI,6BAAKR,EAAKE,OACV,sBAAKM,UAAU,WAAf,UACI,mBAAGA,UAAU,sBAAsBO,MAAM,YAAYC,QAAS,kBArCzF,SAACf,GAEV,IAAIgB,EAAczB,EAAM0B,MAAK,SAAClB,GAE1B,OAAOA,EAAKC,KAAOA,KAEvBN,GAAU,GACVJ,EAAa0B,EAAYf,MACzBL,EAAYI,GA6B4FkB,CAAKnB,EAAKC,OAC9E,mBAAGO,UAAU,2BAA2BO,MAAM,cAAcC,QAAS,kBA/C9F,SAACI,GAEZ,IAAMC,EAAe7B,EAAM8B,QAAO,SAACtB,GAE/B,OAAOoB,IAAUpB,EAAKC,MAE1BR,EAAS4B,GAyCsGE,CAAOvB,EAAKC,YAJhED,EAAKC,SAYpD,qBAAKO,UAAU,YAAf,SACI,wBAAQA,UAAU,eAAegB,oBAAkB,aAAaR,QArClE,WAEdvB,EAAS,KAmCO,SAAoF,0DCjF7FgC,EATI,WAEjB,OACE,mCACE,cAACC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.1720c026.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Todo = () =>\r\n{\r\n    const [inputData, setInputData] = useState(\"\");\r\n    const [items, setItems] = useState([]);\r\n    const [toggle, setToggle] = useState(true);\r\n    const [editItem, setEditItem] = useState(null);\r\n\r\n    const addItems = () =>\r\n    {\r\n        if (!inputData)\r\n        {\r\n            alert(\"plz fill data\")\r\n        } else if (inputData && !toggle)\r\n        {\r\n            setItems(\r\n                items.map((item) =>\r\n                {\r\n                    if (item.id === editItem)\r\n                    {\r\n                        return { ...item, name: inputData }\r\n                    }\r\n                    return item\r\n                })\r\n            )\r\n            setToggle(true);\r\n            setInputData(\"\");\r\n            setEditItem(null);\r\n\r\n        } else\r\n        {\r\n            const allInputData = { id: new Date().getTime().toString(), name: inputData }\r\n            setItems([...items, allInputData]);\r\n            setInputData('');\r\n        }\r\n\r\n    }\r\n    const Delete = (index) =>\r\n    {\r\n        const updatedItems = items.filter((item) =>\r\n        {\r\n            return index !== item.id;\r\n        })\r\n        setItems(updatedItems);\r\n    }\r\n\r\n    const Edit = (id) =>\r\n    {\r\n        let newEditItem = items.find((item) =>\r\n        {\r\n            return item.id === id;\r\n        })\r\n        setToggle(false);\r\n        setInputData(newEditItem.name);\r\n        setEditItem(id);\r\n    }\r\n    const RemoveAll = () =>\r\n    {\r\n        setItems([]);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <div className=\"addItems\">\r\n                        <input type=\"text\" placeholder=\"Add Items\" value={inputData} onChange={(event) => { setInputData(event.target.value) }} />\r\n                        {\r\n                            toggle ? <i className=\"fa fa-plus add-btn\" title=\"Add Item\" onClick={addItems}></i> :\r\n                                <i className=\"fas fa-edit add-btn\" title=\"update Item\" onClick={addItems}></i>\r\n                        }\r\n                    </div>\r\n                    <div className=\"showItems\">\r\n                        {\r\n                            items.map((item) =>\r\n                            {\r\n                                return (\r\n                                    <div className=\"eachItem\" key={item.id}>\r\n                                        <h3>{item.name}</h3>\r\n                                        <div className=\"todo-btn\">\r\n                                            <i className=\"fas fa-edit add-btn\" title=\"edit Item\" onClick={() => Edit(item.id)}></i>\r\n                                            <i className=\"fas fa-trash-alt add-btn\" title=\"Delete Item\" onClick={() => Delete(item.id)}></i>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={RemoveAll}><span>CHECK LIST</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\nexport default Todo;","import React from 'react';\nimport GridLayout from './GridLayout';\nimport \"./index.css\";\n\nexport const App = () =>\n{\n  return (\n    <>\n      <GridLayout />\n    </>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}